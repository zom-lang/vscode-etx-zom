{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Zom",
    "fileTypes": [
        "zom"
    ],
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#types"
		},
		{
			"include": "#numerics"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.zom",
					"match": "\\b(if|else|while|for|return|loop|continue)\\b"
				},
				{
					"name": "keyword.zom",
					"match": "\\b(func|extern|var|const|struct|enum|pub|scheme|comptime|in)\\b"
				},
				{
					"comment": "zom operators (TODO: add operators of the RFC 0004)",
					"name": "keyword.operator.zom",
					"match": "\\s+(\\+|\\-|\\*|\\/|\\%|\\^)\\s+"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.zom",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.zom",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"comment": "empty comment",
					"name": "comment.block.zom",
					"match": "\\/\\*\\*\\/"
				},
				{
					"comment": "zomdoc comment",
					"name": "comment.block.documentation.zom.self",
					"begin": "/// ",
					"end": "\n",
					"patterns": [
						{ "include": "#comments" }
					]
				},
				{
					"comment": "zomdoc comment",
					"name": "comment.block.documentation.zom.super",
					"begin": "//! ",
					"end": "\n",
					"patterns": [
						{ "include": "#comments" }
					]
				},
				{
					"comment": "block comment",
					"name": "comment.block.zom",
					"begin": "\\/\\*",
					"end": "\\*\\/",
					"patterns": [
						{ "include": "#comments" }
					]
				},
				{
					"comment": "line comment zom",
					"name": "comment.line.double-slash.zom",
					"begin": "//",
					"end": "\n"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "storage.type.zom",
					"match": "\\b(i8|i16|i32|i64|i128|u8|u16|u32|u64|u128|f32|f64|bool|char|str)\\b"
				},
				{
					"name": "constant.language.values.zom",
					"match": "\\b(true|false)\\b"
				}
			]	
		},
		"numerics": {
			"name": "constant.numeric.zom",
			"match": "\\d+[.[\\d]+]?"
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.language.zom",
					"match": "\\b(self|super)\\b"
				},
				{
					"name": "entity.name.function",
					"match": "\\w+\\("
				},
				{
					"name": "variable.name.zom",
					"match": "\\w+"
				}
			]
		},
		"functions": {
			"name": "entity.name.function.zom",
			"match": "\\w+\\("
		}
	},
	"scopeName": "source.zom"
}